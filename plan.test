_TMP=$(mktemp -d)
trap "rm -Rf $_TMP" EXIT
PX="./plan.sh -D$_TMP/.hash"

equal_length () {
    ll=$(wc -l "$1" | cut -d' ' -f1)
    lr=$(wc -l "$2" | cut -d' ' -f1)
    test $ll -eq $lr
}

$PX name n. foobar mazmataz
$PX open n.top
$PX ref o. n.top


printf 'n.level 1.%s\n' $(seq 10 ) | xargs -Ixx $PX add o. xx

printf 'n.level 2.%s\n' $(seq 7) | xargs -Ixx $PX add i.3 xx
printf 'n.level 2.%s\n' $(seq 4) | xargs -Ixx $PX add i.5 xx
printf 'n.level 2.%s\n' $(seq 4) | xargs -Ixx $PX add i.7 xx s.0

$PX open i.3

printf 'n.level 3.%s\n' $(seq 4) | xargs -Ixx $PX add i.2 xx
printf 'n.level 3.%s\n' $(seq 3) | xargs -Ixx $PX add i.4 xx

$PX open i.4
printf 'n.level 4.%s\n' $(seq 4) | xargs -Ixx $PX add i.2 xx

$PX id m.:"level 3" | cut -d'|' -f1 | xargs -Ixx $PX group ..xx 'n.level 3'
$PX id m.:"level 2" | cut -d'|' -f1 | xargs -Ixx $PX group ..xx 'n.level 2'
echo groups
$PX show-group
$PX show-group 'level 2'
echo foo
$PX show-group 'level 3'
$PX show-tree r.top
$PX id g.
